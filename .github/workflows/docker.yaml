---
  name: Build and Deploy to GKE
  
  on: 
    push:
      branches:
        - main
  
  jobs:
    build-and-deploy:
      runs-on: ubuntu-latest
  
      steps:
        # Step 1: Checkout code
        - name: Checkout code
          uses: actions/checkout@v4
  
        # Step 2: Set up Google Cloud SDK
        - name: Set up Google Cloud SDK
          uses: google-github-actions/setup-gcloud@v1
          with:
            version: 'latest'
            service_account_key: ${{ secrets.GCLOUD_AUTH }}
            project_id: principal-truck-439009-a1
  
        # Step 3: Set up Docker Buildx
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3
  
        # Step 4: Build Docker image
        - name: Build Docker image
          run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/chess:${{ github.sha }} .
  
        # Step 5: Run Trivy vulnerability scanner
        - name: Run Trivy vulnerability scanner
          uses: aquasecurity/trivy-action@0.28.0
          with:
            image-ref: ${{ secrets.DOCKERHUB_USERNAME }}/chess:${{ github.sha }}
            format: 'table'
            exit-code: '1'
            ignore-unfixed: true
            vuln-type: 'os,library'
            severity: 'CRITICAL,HIGH'
  
        # Step 6: Push Docker image
        - name: Publish Docker Image
          uses: docker/build-push-action@v6
          with:
            context: .
            push: true
            tags: ${{ secrets.DOCKERHUB_USERNAME }}/chess:${{ github.sha }}
  
        # Step 7: Set up kubectl
        - name: Set up kubectl
          uses: azure/setup-kubectl@v3
          with:
            version: 'latest'
  
        # Step 8: Authenticate kubectl to the GKE cluster
        - name: Authenticate kubectl
          run: |
            gcloud container clusters get-credentials my-gke-cluster \
              --region asia-south1 \
              --project principal-truck-439009-a1
  
        # Step 9: Verify kubectl access
        - name: Check kubectl access
          run: kubectl get nodes
  
        # Step 10: Deploy to GKE
        - name: Deploy application
          run: kubectl apply -f ./manifests
  